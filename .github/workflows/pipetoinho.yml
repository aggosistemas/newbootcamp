# .github/workflows/main.yml
name: Terraform AWS Pipeline

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Escolha a ação a ser executada: apply ou destroy"
        required: true
        default: "apply" # Valor padrão
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
      # Checkout do código no repositório
      - name: Checkout Code
        uses: actions/checkout@v3

      # Passo para listar os arquivos do repositório (opcional para depuração)
      - name: List Repository Files
        run: ls -R

      # Configurar Credenciais AWS com Secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1 # Altere para sua região

      # Instalar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7 # Use uma versão adequada
          terraform_wrapper: false

      # Inicializar o Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: Terraform/

      # Validar os arquivos Terraform
      - name: Terraform Validate
        run: terraform validate
        working-directory: Terraform/

      # Planejar as mudanças
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        working-directory: Terraform/

      # Decisão entre apply ou destroy
      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            echo "Executando Terraform Apply..."
            terraform apply -auto-approve tfplan
          elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            echo "Executando Terraform Destroy..."
            terraform destroy -auto-approve
          else
            echo "Ação inválida: ${GITHUB_INPUT_ACTION}"
            exit 1
          fi
        working-directory: Terraform/
